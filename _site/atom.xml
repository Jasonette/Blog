<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>jasonette</title>
 <link href="http://localhost:4000/atom.xml" rel="self"/>
 <link href="http://localhost:4000/"/>
 <updated>2017-02-07T13:06:58-05:00</updated>
 <id>http://localhost:4000</id>
 <author>
   <name>JASON</name>
   <email></email>
 </author>

 
 <entry>
   <title>Supercharged tab bar!</title>
   <link href="http://localhost:4000/2017/02/07/supercharged-tabbar/"/>
   <updated>2017-02-07T00:00:00-05:00</updated>
   <id>http://localhost:4000/2017/02/07/supercharged-tabbar</id>
   <content type="html">&lt;p&gt;With the latest version, Jasonette now supports &lt;a href=&quot;https://docs.jasonette.com/href&quot;&gt;href&lt;/a&gt; and &lt;a href=&quot;https://docs.jasonette.com/action&quot;&gt;action&lt;/a&gt; attributes for the bottom tab bar, which lets you do cool things like open a view in a modal, or execute any actions when you tap a tab item.&lt;/p&gt;

&lt;p&gt;Let me explain what this means.&lt;/p&gt;

&lt;h2&gt;How it currently works&lt;/h2&gt;

&lt;p&gt;The &lt;a href=&quot;https://docs.jasonette.com/document/#tabs&quot;&gt;bottom tab bar&lt;/a&gt; is useful for switching between multiple views.&lt;/p&gt;

&lt;p&gt;&lt;img class='bordered medium' src='http://docs.jasonette.com/images/footer_tabs.jpeg'&gt;&lt;/p&gt;

&lt;p&gt;Normally to make sure the each tab loads a separate view when tapped, you would simply specify the &lt;code&gt;url&lt;/code&gt; attribute like this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;$jason&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;body&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;footer&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;tabs&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;items&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Tab 1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://jasonbase.com/things/3fn.json&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Tab 2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://jasonbase.com/things/2fn.json&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Tab 3&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://jasonbase.com/things/9fn.json&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is sufficient for most use cases, but sometimes you want more. For example you may want to:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Open a new view as a modal instead of as a tab view.&lt;/li&gt;
&lt;li&gt;Open a browser when you tap a tab item.&lt;/li&gt;
&lt;li&gt;Exectue an action (Such as open a camera) when you tap.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;These things weren&amp;#39;t possible since the only supported attribute was &lt;code&gt;url&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;However, this changes today. You can attach not only &lt;code&gt;url&lt;/code&gt; but also &lt;a href=&quot;https://docs.jasonette.com/href/&quot;&gt;href&lt;/a&gt; as well as &lt;a href=&quot;https://docs.jasonette.com/actions/&quot;&gt;action&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Go download the &lt;code&gt;develop&lt;/code&gt; branch (&lt;a href=&quot;https://github.com/Jasonette/JASONETTE-iOS&quot;&gt;iOS&lt;/a&gt; and &lt;a href=&quot;https://github.com/Jasonette/JASONETTE-Android&quot;&gt;Android&lt;/a&gt;) and try it out. Here&amp;#39;s what has changed:&lt;/p&gt;

&lt;h2&gt;href&lt;/h2&gt;

&lt;p&gt;You can now set &lt;code&gt;href&lt;/code&gt; as well as &lt;code&gt;url&lt;/code&gt;. &lt;a href=&quot;https://docs.jasonette.com/href/&quot;&gt;href&lt;/a&gt; is obviously more powerful since you can specify not just the url but also the &lt;code&gt;view&lt;/code&gt; or the type of &lt;code&gt;transition&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img class='bordered medium' src='/assets/tab_href.gif'&gt;&lt;/p&gt;

&lt;p&gt;See below example:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;$jason&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;body&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;footer&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;tabs&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;items&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Tab 1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://jasonbase.com/things/3fn.json&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Tab 2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;href&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
              &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://jasonbase.com/things/2fn.json&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
              &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;transition&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;modal&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Tab 3&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;href&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
              &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://www.google.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
              &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;view&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;web&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;tab 1&lt;/code&gt; uses the original &lt;code&gt;url&lt;/code&gt; approach. It&amp;#39;s simpler and usually works for most cases.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tab 2&lt;/code&gt; now opens in a modal view when you tap, instead of opening within the current view.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tab 3&lt;/code&gt; now opens a browser since it&amp;#39;s a &lt;code&gt;&amp;quot;view&amp;quot;: &amp;quot;web&amp;quot;&lt;/code&gt; type href.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;action&lt;/h2&gt;

&lt;p&gt;You can even set an &lt;code&gt;action&lt;/code&gt; attribute for a tab. You may see something like this in photo apps like Instagram--you tap one of the tab bar items and it opens a camera.&lt;/p&gt;

&lt;p&gt;&lt;img class='bordered medium' src='/assets/tab_action.gif'&gt;&lt;/p&gt;

&lt;p&gt;Here&amp;#39;s an example:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;$jason&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;body&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;footer&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;tabs&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;items&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Tab 1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://jasonbase.com/things/3fn.json&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Tab 2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;action&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
              &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;$media.camera&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Tab 3&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;href&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
              &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://www.google.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
              &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;view&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;web&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;Tab 2&lt;/code&gt; now runs the &lt;a href=&quot;https://docs.jasonette.com/actions/#mediacamera&quot;&gt;$media.camera action&lt;/a&gt; when you tap.&lt;/p&gt;

&lt;p&gt;Note that you can attach &lt;strong&gt;any&lt;/strong&gt; kind of actions here, not just camera.&lt;/p&gt;

&lt;h2&gt;Tip&lt;/h2&gt;

&lt;p&gt;Sometimes people are confused about how the tabs work. Here&amp;#39;s a rule of thumb:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You MUST specify the tabs for every view.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Let&amp;#39;s say you have tab1, tab2, and tab3. All of those views MUST contain the &lt;strong&gt;same&lt;/strong&gt; &lt;code&gt;tabs&lt;/code&gt; object. If you only have the &lt;code&gt;tabs&lt;/code&gt; object on &lt;code&gt;tab1&lt;/code&gt;&amp;#39;s markup, the tab bar will go away when you navigate away to tab2 or tab3.&lt;/p&gt;

&lt;h2&gt;Try it out!&lt;/h2&gt;

&lt;p&gt;As of today this works on both &lt;a href=&quot;https://github.com/Jasonette/JASONETTE-Android&quot;&gt;Android&lt;/a&gt; and &lt;a href=&quot;https://github.com/Jasonette/JASONETTE-iOS&quot;&gt;iOS&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Remote-control your Slack bots with JSON</title>
   <link href="http://localhost:4000/2017/01/17/build-a-slackbot-with-jasonette/"/>
   <updated>2017-01-17T00:00:00-05:00</updated>
   <id>http://localhost:4000/2017/01/17/build-a-slackbot-with-jasonette</id>
   <content type="html">&lt;p&gt;A couple of days ago, &lt;a href=&quot;https://github.com/shaunymca&quot;&gt;@shaunymca&lt;/a&gt; shared a really cool project on &lt;a href=&quot;https://jasonette.now.sh/&quot;&gt;our slack channel&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src='/assets/coffeebot.png' class='bordered'&gt;&lt;/p&gt;

&lt;p&gt;If you think about it, this is a pretty refreshing idea. Basically, it&amp;#39;s &lt;strong&gt;a mobile app for remote-controlling a Slack bot.&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;To declare that you&amp;#39;ve started brewing coffee, open the app, and simply touch the button from the cell with your name&lt;/p&gt;

&lt;p&gt;&lt;img src='/assets/coffeebot_original.png' class='medium bordered'&gt;&lt;/p&gt;

&lt;p&gt;And in 12 minutes, &lt;/p&gt;

&lt;p&gt;&lt;img src='/assets/coffee_bot_slack.png' class='bordered'&gt;&lt;/p&gt;

&lt;p&gt;And the cool part is, this was built with Jasonette, so &lt;strong&gt;he didn&amp;#39;t need to write any native code.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;First, he wrote an express.js server which returns a JSON markup.&lt;/p&gt;

&lt;p&gt;Then he connected it to &lt;a href=&quot;https://www.jasonette.com&quot;&gt;Jasonette&lt;/a&gt;, which turned that JSON markup into a native app which drew the UI as well as sent requests to the server upon user input.&lt;/p&gt;

&lt;p&gt;And voila! We have a remote control app for Slack bots.&lt;/p&gt;

&lt;p&gt;Check out the repo here: &lt;a href=&quot;https://github.com/shaunymca/coffeeapp&quot;&gt;https://github.com/shaunymca/coffeeapp&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2&gt;Demo&lt;/h2&gt;

&lt;p&gt;I thought it was really cool so just decided to fork and try it out on our own slack channel. Here&amp;#39;s how it works:&lt;/p&gt;

&lt;p&gt;When the &lt;a href=&quot;https://jasonette.com&quot;&gt;Jasonette app&lt;/a&gt; hits the home url, the server returns a JSON markup that looks like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/coffee_json.png&quot; alt=&quot;Coffee json&quot;&gt;&lt;/p&gt;

&lt;p&gt;Then, Jasonette turns it into a native app that looks like this:&lt;/p&gt;

&lt;p&gt;&lt;span class='col-6'&gt;
    &lt;span&gt;iOS&lt;/span&gt;
    &lt;img src='/assets/coffee_app_ios.png' class='medium bordered'&gt;
&lt;/span&gt;
&lt;span class='col-6'&gt;
    &lt;span&gt;Android&lt;/span&gt;
    &lt;img src='/assets/coffee_app_android.png' class='medium bordered'&gt;
&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;So how does it work behind the scenes? Each cell item is represented by a JSON object in the markup, which has an &lt;code&gt;action&lt;/code&gt; attribute that looks like this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;$network.request&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;options&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://evening-inlet-32428.herokuapp.com/submit.json&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;method&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;POST&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;data&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;user_name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;{{name}}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;user_id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;{{id}}&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When you tap on a cell, it makes a &lt;code&gt;POST&lt;/code&gt; request to the &lt;a href=&quot;https://github.com/shaunymca/coffeeapp/blob/master/server.js#L61&quot;&gt;submit.json&lt;/a&gt; endpoint, which &lt;a href=&quot;https://github.com/shaunymca/coffeeapp/blob/master/modules/slackPosting.js#L17&quot;&gt;triggers the Slack API&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;And in 12 minutes, your Slack channel will get a notification from the Coffee bot!.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src='/assets/coffee_bot_slack.png' class='bordered'&gt;&lt;/p&gt;

&lt;h2&gt;TLDR&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;The express server returns a &lt;a href=&quot;https://github.com/shaunymca/coffeeapp/blob/master/modules/jsonette.js#L61&quot;&gt;JSON markup&lt;/a&gt;, which becomes a native app when you connect it with Jasonette.&lt;/li&gt;
&lt;li&gt;When you tap an item from the app, it triggers a &lt;a href=&quot;http://docs.jasonette.com/actions/#networkrequest&quot;&gt;POST request&lt;/a&gt; to the server.&lt;/li&gt;
&lt;li&gt;The server waits 12 minutes, and then triggers the Slack API with credentials to post to the Slack channel.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;This reminded me of the &lt;a href=&quot;https://www.justyo.co/&quot;&gt;Yo app&lt;/a&gt;, since it&amp;#39;s meant to only serve a single purpose.&lt;/p&gt;

&lt;p&gt;It&amp;#39;s like a bot version of Yo. But for multiplayer. And powered by Slack!&lt;/p&gt;

&lt;p&gt;It&amp;#39;s awesome to see these creative projects being built with Jasonette. Feel free to &lt;a href=&quot;https://twitter.com/jasonclient&quot;&gt;reach out&lt;/a&gt; if you built something cool using Jasonette. I will try to showcase them on the blog.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Lastly, make sure to try out &lt;a href=&quot;https://github.com/shaunymca&quot;&gt;@shaunymca&lt;/a&gt;&amp;#39;s coffeebot app for your own slack channel! It&amp;#39;s so cool! &lt;a href=&quot;https://github.com/shaunymca/coffeeapp&quot;&gt;https://github.com/shaunymca/coffeeapp&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;hr&gt;
</content>
 </entry>
 
 <entry>
   <title>Jasonette, 2016 in Review</title>
   <link href="http://localhost:4000/2017/01/12/Jasonette-2016-in-review/"/>
   <updated>2017-01-12T00:00:00-05:00</updated>
   <id>http://localhost:4000/2017/01/12/Jasonette-2016-in-review</id>
   <content type="html">&lt;p&gt;How are apps built?&lt;/p&gt;

&lt;p&gt;You write a program and put it on the phone!&lt;/p&gt;

&lt;p&gt;But what if you could represent an entire native app as JSON and &lt;strong&gt;load it on demand from the cloud over HTTP&lt;/strong&gt;, just like a web page?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jasonette.com/images/j.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;This little idea consumed the entirety of my life in 2016.&lt;/p&gt;

&lt;p&gt;And the result is &lt;a href=&quot;https://www.jasonette.com&quot;&gt;Jasonette&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Jasonette lets you &lt;strong&gt;build 100% native apps on Android and iOS simply by writing a single JSON markup.&lt;/strong&gt; Watch the video below if you haven&amp;#39;t yet. Your life will never be the same.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;style&gt;.embed-container { position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden; max-width: 100%; } .embed-container iframe, .embed-container object, .embed-container embed { position: absolute; top: 0; left: 0; width: 100%; height: 100%; }&lt;/style&gt;&lt;div class='embed-container'&gt;    &lt;iframe title=&quot;YouTube video player&quot; width=&quot;640&quot; height=&quot;390&quot; src=&quot;//www.youtube.com/embed/hfevBAAfCMQ&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;When I look back at 2016, it really feels like ages because so many things happened.&lt;/p&gt;

&lt;p&gt;But it&amp;#39;s crazy to think that it&amp;#39;s only been 2 months since I open sourced Jasonette!&lt;/p&gt;

&lt;p&gt;Let me share my 2016 with you today.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2&gt;Season 1 Pilot: Jason&lt;/h2&gt;

&lt;p&gt;Exactly 8 months ago from today, &lt;a href=&quot;https://www.producthunt.com/posts/jason&quot;&gt;I released an app called Jason&lt;/a&gt;. This was a standalone app that was a precursor to Jasonette. You would enter a JSON URL into Jason app&amp;#39;s address bar, and it would instantly turn into your own custom app.&lt;/p&gt;

&lt;p&gt;&lt;img class='center' src='https://s3-us-west-2.amazonaws.com/www.jasonclient.org/intro.gif'&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;A lot of minds were blown:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://pbs.twimg.com/media/CirgXxKXAAEoOXt.jpg:large&quot; alt=&quot;twitter&quot;&gt;&lt;/p&gt;

&lt;p&gt;But at the same time, this was one of the most esoteric apps one could build—an app within an app, &lt;a href=&quot;https://en.wikipedia.org/wiki/Matryoshka_doll&quot;&gt;a russian doll&lt;/a&gt; of sorts—as pointed out below:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/ph.png&quot; alt=&quot;ph&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;I didn&amp;#39;t even have a specific set of target users in mind when I built this. I just built it because I could.™&lt;/p&gt;

&lt;p&gt;But I looked at all these reactions and thought about it:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Other people were amazed that an app can be built this way, and wanted to build their own apps this way too.&lt;/li&gt;
&lt;li&gt;I wasn&amp;#39;t interested in just another way of building apps. I was more interested in lowering the barrier so significantly that it changes the meaning of the term &amp;quot;app&amp;quot;.&lt;/li&gt;
&lt;li&gt;Charging for usage would beat the purpose since that would fail at lowering the barrier.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I knew exactly what I had to do: Jason needed to be open sourced and completely set free.&lt;/p&gt;

&lt;p&gt;Well it shouldn&amp;#39;t be that hard to open source. After all, I already have a functional code base, right?&lt;/p&gt;

&lt;p&gt;Hahaha. &lt;/p&gt;

&lt;p&gt;It took me 6 months.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2&gt;Intermission: Lessons learned from documentation&lt;/h2&gt;

&lt;p&gt;Once I dived in, I soon realized open sourcing is not just about putting the code out there, but making sure people can understand it easily.&lt;/p&gt;

&lt;p&gt;This was especially the case for Jasonette, because without a documented API, no one would be able to know what they can do with it. It would be like releasing a web browser without an HTML spec. Basically, the documentation itself was the product.&lt;/p&gt;

&lt;p&gt;And turns out, documentation is not easy. &lt;/p&gt;

&lt;div class='jekyll-twitter-plugin'&gt;&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Open source project is 1 percent inspiration, 99 percent documentation.&lt;/p&gt;&amp;mdash; ethan (@gliechtenstein) &lt;a href=&quot;https://twitter.com/gliechtenstein/status/786284865733877764&quot;&gt;October 12, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;&lt;/div&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;For the next 6 months, I did nothing but documentation and code cleanup.&lt;/p&gt;

&lt;p&gt;These were my darkest days. I did nothing but work on the documentation, I wasn&amp;#39;t creating something new, I was simply documenting something that already existed and I hated it. But what other options did I have? So I kept at it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;However, I soon realized that&lt;/strong&gt; while frustrating, the process of documenting the project was extremely helpful:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;I got to understand my own code better.&lt;/li&gt;
&lt;li&gt;I found a lot of inconsistencies in the API while documenting, which needed to be refactored.&lt;/li&gt;
&lt;li&gt;I gained a birds-eye point of view of the project, which was crucial when I started working on the Android version later.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;But the thing is, the more I documented, the more I had to refactor, and the more I refactored, the more I had to document to reflect the update. By working more, I was creating even more work. At some point I started feeling like a &lt;a href=&quot;https://en.wikipedia.org/wiki/Zeno&amp;#x27;s_paradoxes#Achilles_and_the_tortoise&quot;&gt;tortoise chasing after achilles&lt;/a&gt;. Would I ever finish this?&lt;/p&gt;

&lt;p&gt;In the meantime, I had set up a landing page and kept adding new materials as soon as they were ready, even though I hadn&amp;#39;t launched it yet. And somehow people were discovering it and sharing it.&lt;/p&gt;

&lt;p&gt;One day when I was begrudgingly working on documenting an &lt;a href=&quot;https://github.com/Jasonette/s3-upload-example&quot;&gt;express.js demo app&lt;/a&gt; for Jasonette, I saw this tweet.&lt;/p&gt;

&lt;div class='jekyll-twitter-plugin'&gt;&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;kind of interesting, 100% declarative apps with JSON &lt;a href=&quot;https://t.co/hzjyhZKsmU&quot;&gt;https://t.co/hzjyhZKsmU&lt;/a&gt;, probably hella leaky abstraction in some cases but neat&lt;/p&gt;&amp;mdash; TJ Holowaychuk (@tjholowaychuk) &lt;a href=&quot;https://twitter.com/tjholowaychuk/status/779092360487546880&quot;&gt;September 22, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;&lt;/div&gt;

&lt;p&gt;What a nice timing! I was very excited, and this encouraging tweet gave me all the strength I needed to finish up the docs and prepare for the launch... which wouldn&amp;#39;t happen for another month and a half.&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Season 1 Episode 01. Jasonette-iOS&lt;/h2&gt;

&lt;p&gt;On the morning of 11/4 &lt;a href=&quot;https://news.ycombinator.com/item?id=12879179&quot;&gt;I posted on Hacker News&lt;/a&gt;. It shot up to #1 and stayed #1 the entire day.&lt;/p&gt;

&lt;p&gt;Then it went on to become the &lt;strong&gt;#1 Github trending project&lt;/strong&gt;. Not too bad for my first ever open source contribution!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/github_trending.png&quot; alt=&quot;github&quot;&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Season 1 Episode 02. Jasonette-Android&lt;/h2&gt;

&lt;p&gt;Upon releasing the iOS version, the most frequently asked question was &amp;quot;Android?&amp;quot;. I wasn&amp;#39;t surprised, since I knew that was the most obvious next step.&lt;/p&gt;

&lt;p&gt;However what I didn&amp;#39;t know was how long it would take me to come up with one.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Or if it would be even possible at all.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I only knew that Android had a layout system called &lt;code&gt;LinearLayout&lt;/code&gt; which works similar to &lt;code&gt;UIStackView&lt;/code&gt; which I used for the iOS version. So I just assumed that it would be possible, but it was really not straightforward.&lt;/p&gt;

&lt;p&gt;This time, I decided not to torture myself with 6 months of agony. Instead of trying to make a perfect release, I decided to pick only the most crucial features and commit to releasing version 0 as soon as possible, and go from there.&lt;/p&gt;

&lt;p&gt;I set the goal: &lt;strong&gt;Implement the core engine and get it out there, in 1 month.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;And surprisingly, I managed to succeed.&lt;/p&gt;

&lt;p&gt;Watch the android version and the ios version side by side. These are loading from exactly the same JSON you can find &lt;a href=&quot;https://github.com/Jasonette/Instagram-UI-example/blob/master/home.json&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class='col-6'&gt;&lt;img src='https://cdn-images-1.medium.com/max/1200/1*yHXxTeQFdyWjxPSP2f7ZkA.gif'&gt;&lt;/span&gt;&lt;span class='col-6'&gt;&lt;img src='https://cdn-images-1.medium.com/max/1200/1*v9RxUZ-8XzLfDTfI3gmx6A.gif'&gt;&lt;/span&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Season 1 Finale: Current state of Jasonette community&lt;/h2&gt;

&lt;p&gt;What excites me the most is that the project has managed to find a great community of people who share the same vision and all contributing to the project in many different ways.&lt;/p&gt;

&lt;h3&gt;Open source is magic&lt;/h3&gt;

&lt;p&gt;I&amp;#39;ve never worked on open source before so all these contributions from people I&amp;#39;ve never met still feel surreal to me.&lt;/p&gt;

&lt;p&gt;It&amp;#39;s really amazing how people from all around the world can come together and collaborate to build something together this easily.&lt;/p&gt;

&lt;h3&gt;New features and projects&lt;/h3&gt;

&lt;p&gt;I went back and took a look at what our community has accomplished during the two months Jasonette has been out, and looks like we did a lot.&lt;/p&gt;

&lt;p&gt;Here are some of the &lt;strong&gt;new major features and projects&lt;/strong&gt; we&amp;#39;ve added since the launch (Not including bugfixes or iOS-to-Android feature port because that would make the list huuuge):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Jasonette/JASONETTE-Android&quot;&gt; 🔥 Jasonette-Android&lt;/a&gt; - The name says it all. The Android implementation of Jasonette, which makes Jasonette fully cross platform.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Jasonette/JASONETTE-Android/issues/13&quot;&gt;Android binary size reduction&lt;/a&gt; - Initially the Android binary size was huge, at over 40MB. We&amp;#39;ve made some optimizations which dropped it down to around 9MB, all the while supporting 100% of the parsers (json, csv, rss, xml, html), thanks for the contribution &lt;a href=&quot;https://github.com/brad&quot;&gt;@brad&lt;/a&gt;!&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Jasonette/JASONETTE-iOS/issues/7&quot;&gt;Push notifications&lt;/a&gt; - Push notifications on iOS purely powered by JSON. We will soon release this officially once we document the API and implement the Android version.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Jasonette/JASONETTE-iOS/pull/42&quot;&gt;Local JSON&lt;/a&gt; - This was one of the &lt;a href=&quot;https://github.com/Jasonette/JASONETTE-iOS/issues/48&quot;&gt;most higly requested&lt;/a&gt; features. Some people wanted to embed a JSON file in their project locally instead of fetching from a remote server. I initially was hesitant but soon became convinced that it can be useful in many cases. Thanks to &lt;a href=&quot;https://github.com/copongcopong&quot;&gt;@copongcopong&lt;/a&gt; for the implementation!&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Jasonette/JASONETTE-iOS/issues/34&quot;&gt;CocoaPods based extension management&lt;/a&gt; - We had a long discussion thread about this on Github, and in the end, &lt;a href=&quot;https://github.com/seletz&quot;&gt;@seletz&lt;/a&gt; implemented a solution which worked beautifully. We are currently working on the second iteration of extension management based on the insights we gained from this.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Jasonette/JASONETTE-iOS/pull/92&quot;&gt;Ad integration&lt;/a&gt; - This was also one of the &lt;a href=&quot;https://github.com/Jasonette/JASONETTE-iOS/issues/79&quot;&gt;most highly requested&lt;/a&gt; features as well. Thanks to &lt;a href=&quot;https://github.com/wajahatch888&quot;&gt;@wajahatch888&lt;/a&gt;, now we have AdMob support on iOS. &lt;a href=&quot;https://github.com/Jasonette/JASONETTE-Android/issues/22&quot;&gt;Android support&lt;/a&gt; to come soon :)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Jasonette/JASONETTE-iOS/commit/b359ab6d44f88d54ca9a5240f0e62e4ec0ca6852&quot;&gt;Deep linking&lt;/a&gt; - Ability to open Jasonette apps using URL scheme (Example: &lt;code&gt;jasonette://href?url=https://www.jasonbase.com/things/dh3.json&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Jasonette/JASONETTE-iOS/pull/20&quot;&gt;Log action&lt;/a&gt; - An action that lets you log anything during execution. Built by &lt;a href=&quot;https://github.com/seletz&quot;&gt;@seletz&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Jasonette/JASONETTE-iOS/pull/27&quot;&gt;$background event&lt;/a&gt; - An event to detect when the app goes into background mode. Thanks &lt;a href=&quot;https://github.com/fretn&quot;&gt;@fretz&lt;/a&gt;!&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Jasonette/JASONETTE-iOS/pull/30&quot;&gt;components border&lt;/a&gt; - Add &amp;quot;border&amp;quot; attribute to component styles. Now, any component can have a border surrounding them, thanks to &lt;a href=&quot;https://github.com/WenchaoD&quot;&gt;@WenchaoD&lt;/a&gt;!&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Jasonette/JASONETTE-iOS/pull/87&quot;&gt;Loading indicator&lt;/a&gt; - Another great feature addition by &lt;a href=&quot;https://github.com/wajahatch888&quot;&gt;@wajahatch888&lt;/a&gt;. Displays a loading indicator when the content is loading.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Jasonette/JASONETTE-Android/issues/30&quot;&gt;HTML component for Android&lt;/a&gt; - I had actually left out this feature on Android initially because I wasn&amp;#39;t sure how performant it would be to have WebViews as components. &lt;a href=&quot;https://github.com/brad&quot;&gt;@brad&lt;/a&gt; went on and just built it himself, and turns out that it works super smooth! Now works cross-platform both on iOS and Android.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Jasonette/JASONETTE-iOS/pull/94&quot;&gt;Image button&lt;/a&gt; - Initially the buttons could only display text. Now it&amp;#39;s possible to use image buttons. Both on iOS and Android.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Other Important Contributions&lt;/h3&gt;

&lt;p&gt;New features are exciting, but I think what&amp;#39;s really important are things that we do to make the project itself much more maintainable and comprehensible so it&amp;#39;s easier to work with. This includes:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Documentation&lt;/li&gt;
&lt;li&gt;Adding automation to reduce repetitive tasks&lt;/li&gt;
&lt;li&gt;Making it easier to work with Jasonette itself&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;It&amp;#39;s still very early days for Jasonette so we lack a lot of these things. And the community is coming up with various solutions. &lt;strong&gt;I especially welcome these contributions with open arms&lt;/strong&gt;. Here are some of the highlights we&amp;#39;ve achieved:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Jasonette/documentation/commit/eb5734484d07b49ec81a70c5eb8c017eaa342412&quot;&gt;Auto-generate documentation using Travis CI&lt;/a&gt; - As an open source newbie I had no idea you could just automatically generate a documentation, so have been manually doing it. Now it&amp;#39;s all automated via &lt;a href=&quot;https://travis-ci.org/&quot;&gt;Travis CI&lt;/a&gt;, thanks to &lt;a href=&quot;https://github.com/gtramontina&quot;&gt;@gtramontina&lt;/a&gt;!&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Jasonette/JASONETTE-iOS/commit/0962d3bd2a7ccec7c091cb42a643055be7a03c6a&quot;&gt;Integration with Code Climate&lt;/a&gt; - I am learning about all kinds of great tools for maintaining and visualizing open source projects from contributions. &lt;a href=&quot;https://codeclimate.com&quot;&gt;Code Climate&lt;/a&gt; is really nifty and lets you see problems with the code at a glance. Thanks to &lt;a href=&quot;https://github.com/lukeramsden&quot;&gt;@lukeramsden&lt;/a&gt; for the integration!&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Jasonette/JASONETTE-iOS/commit/81cf25c9b26fad1e066027e28daa9f13cdaabe3a&quot;&gt;Make it easy to use multiple targets in XCode&lt;/a&gt; - I honestly had never thought about this idea. &lt;a href=&quot;https://github.com/golopupinsky&quot;&gt;@golopupinsky&lt;/a&gt; found that it becomes tedious to use one Jasonette project to build multiple apps, and just came up with a solution, and I think it will be super useful for people who want to juggle between building multiple apps using a single Jasonette project file.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2&gt;What next in 2017? - Season 2 Preview&lt;/h2&gt;

&lt;p&gt;2016 was just the beginning. Our community is working on a lot of exciting things, and we plan to release tons of mind-blowing things in 2017. Here are some examples:&lt;/p&gt;

&lt;h3&gt;Oauth&lt;/h3&gt;

&lt;p&gt;This will be amazing once we roll out officially. It will be one of the most powerful features of Jasonette. Stay tuned :)&lt;/p&gt;

&lt;h3&gt;Package Manager&lt;/h3&gt;

&lt;p&gt;Jasonette was &lt;a href=&quot;http://docs.jasonette.com/advanced/#extension&quot;&gt;designed to be extensible&lt;/a&gt;. However, while writing an extension for personal usage has been easy, it has always been difficult to share and distribute because of all the dependency management we had to deal with.&lt;/p&gt;

&lt;p&gt;After having tried multiple approaches to managing extensions, we&amp;#39;ve finally found the best way to make writing extensions dead simple. We are still working on it and plan to release it soon.&lt;/p&gt;

&lt;p&gt;Expect to see a lot of cool additional features powered by JSON in 2017. &lt;/p&gt;

&lt;h3&gt;Lambda&lt;/h3&gt;

&lt;p&gt;I&amp;#39;ll leave this up to your imagination :)&lt;/p&gt;

&lt;p&gt;All I have to say is that this will take jasonette to the next level.&lt;/p&gt;

&lt;h3&gt;Much more&lt;/h3&gt;

&lt;p&gt;Of course, there are a lot of other cool projects which are still work in progress but I won&amp;#39;t mention them here just to keep the mystery 😁 &lt;/p&gt;

&lt;p&gt;Follow our project to stay updated!&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Join us.&lt;/h2&gt;

&lt;p&gt;Sound exciting? join us on &lt;a href=&quot;https://jasonette.now.sh/&quot;&gt;slack&lt;/a&gt;, &lt;a href=&quot;https://forum.jasonette.com/&quot;&gt;forum&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/jasonclient&quot;&gt;twitter&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;Also, follow and contribute to the project on Github: &lt;a href=&quot;https://github.com/Jasonette/JASONETTE-Android&quot;&gt;Jasonette-Android&lt;/a&gt;, &lt;a href=&quot;https://github.com/Jasonette/JASONETTE-iOS&quot;&gt;Jasonette-iOS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;And most importantly, &lt;a href=&quot;https://www.jasonette.com&quot;&gt;Go build awesome things with it!&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/join.png&quot; alt=&quot;Join us&quot;&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Remote-control your Slack bots with JSON</title>
   <link href="http://localhost:4000/2016/01/17/build-a-slackbot-with-jasonette/"/>
   <updated>2016-01-17T00:00:00-05:00</updated>
   <id>http://localhost:4000/2016/01/17/build-a-slackbot-with-jasonette</id>
   <content type="html">&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; As a mistake I timestamped this as 2016, but this post was just freshly published on January 17th of 2017. Sorry for the confusion! :D &lt;/p&gt;

&lt;p&gt;A couple of days ago, &lt;a href=&quot;https://github.com/shaunymca&quot;&gt;@shaunymca&lt;/a&gt; shared a really cool project on &lt;a href=&quot;https://jasonette.now.sh/&quot;&gt;our slack channel&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src='/assets/coffeebot.png' class='bordered'&gt;&lt;/p&gt;

&lt;p&gt;If you think about it, this is a pretty refreshing idea. Basically, it&amp;#39;s &lt;strong&gt;a mobile app for remote-controlling a Slack bot.&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;To declare that you&amp;#39;ve started brewing coffee, open the app, and simply touch the button from the cell with your name&lt;/p&gt;

&lt;p&gt;&lt;img src='/assets/coffeebot_original.png' class='medium bordered'&gt;&lt;/p&gt;

&lt;p&gt;And in 12 minutes, &lt;/p&gt;

&lt;p&gt;&lt;img src='/assets/coffee_bot_slack.png' class='bordered'&gt;&lt;/p&gt;

&lt;p&gt;And the cool part is, this was built with Jasonette, so &lt;strong&gt;he didn&amp;#39;t need to write any native code.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;First, he wrote an express.js server which returns a JSON markup.&lt;/p&gt;

&lt;p&gt;Then he connected it to &lt;a href=&quot;https://www.jasonette.com&quot;&gt;Jasonette&lt;/a&gt;, which turned that JSON markup into a native app which drew the UI as well as sent requests to the server upon user input.&lt;/p&gt;

&lt;p&gt;And voila! We have a remote control app for Slack bots.&lt;/p&gt;

&lt;p&gt;Check out the repo here: &lt;a href=&quot;https://github.com/shaunymca/coffeeapp&quot;&gt;https://github.com/shaunymca/coffeeapp&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2&gt;Demo&lt;/h2&gt;

&lt;p&gt;I thought it was really cool so just decided to fork and try it out on our own slack channel. Here&amp;#39;s how it works:&lt;/p&gt;

&lt;p&gt;When the &lt;a href=&quot;https://jasonette.com&quot;&gt;Jasonette app&lt;/a&gt; hits the home url, the server returns a JSON markup that looks like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/coffee_json.png&quot; alt=&quot;Coffee json&quot;&gt;&lt;/p&gt;

&lt;p&gt;Then, Jasonette turns it into a native app that looks like this:&lt;/p&gt;

&lt;p&gt;&lt;span class='col-6'&gt;
    &lt;span&gt;iOS&lt;/span&gt;
    &lt;img src='/assets/coffee_app_ios.png' class='medium bordered'&gt;
&lt;/span&gt;
&lt;span class='col-6'&gt;
    &lt;span&gt;Android&lt;/span&gt;
    &lt;img src='/assets/coffee_app_android.png' class='medium bordered'&gt;
&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;So how does it work behind the scenes? Each cell item is represented by a JSON object in the markup, which has an &lt;code&gt;action&lt;/code&gt; attribute that looks like this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;$network.request&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;options&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://evening-inlet-32428.herokuapp.com/submit.json&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;method&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;POST&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;data&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;user_name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;{{name}}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;user_id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;{{id}}&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When you tap on a cell, it makes a &lt;code&gt;POST&lt;/code&gt; request to the &lt;a href=&quot;https://github.com/shaunymca/coffeeapp/blob/master/server.js#L61&quot;&gt;submit.json&lt;/a&gt; endpoint, which &lt;a href=&quot;https://github.com/shaunymca/coffeeapp/blob/master/modules/slackPosting.js#L17&quot;&gt;triggers the Slack API&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;And in 12 minutes, your Slack channel will get a notification from the Coffee bot!.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src='/assets/coffee_bot_slack.png' class='bordered'&gt;&lt;/p&gt;

&lt;h2&gt;TLDR&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;The express server returns a &lt;a href=&quot;https://github.com/shaunymca/coffeeapp/blob/master/modules/jsonette.js#L61&quot;&gt;JSON markup&lt;/a&gt;, which becomes a native app when you connect it with Jasonette.&lt;/li&gt;
&lt;li&gt;When you tap an item from the app, it triggers a &lt;a href=&quot;http://docs.jasonette.com/actions/#networkrequest&quot;&gt;POST request&lt;/a&gt; to the server.&lt;/li&gt;
&lt;li&gt;The server waits 12 minutes, and then triggers the Slack API with credentials to post to the Slack channel.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;This reminded me of the &lt;a href=&quot;https://www.justyo.co/&quot;&gt;Yo app&lt;/a&gt;, since it&amp;#39;s meant to only serve a single purpose.&lt;/p&gt;

&lt;p&gt;It&amp;#39;s like a bot version of Yo. But for multiplayer. And powered by Slack!&lt;/p&gt;

&lt;p&gt;It&amp;#39;s awesome to see these creative projects being built with Jasonette. Feel free to &lt;a href=&quot;https://twitter.com/jasonclient&quot;&gt;reach out&lt;/a&gt; if you built something cool using Jasonette. I will try to showcase them on the blog.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Lastly, make sure to try out &lt;a href=&quot;https://github.com/shaunymca&quot;&gt;@shaunymca&lt;/a&gt;&amp;#39;s coffeebot app for your own slack channel! It&amp;#39;s so cool! &lt;a href=&quot;https://github.com/shaunymca/coffeeapp&quot;&gt;https://github.com/shaunymca/coffeeapp&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;hr&gt;
</content>
 </entry>
 
 <entry>
   <title>Jasonette, 2016 in Review</title>
   <link href="http://localhost:4000/2016/01/12/Jasonette-2016-in-review/"/>
   <updated>2016-01-12T00:00:00-05:00</updated>
   <id>http://localhost:4000/2016/01/12/Jasonette-2016-in-review</id>
   <content type="html">&lt;p&gt;How are apps built?&lt;/p&gt;

&lt;p&gt;You write a program and put it on the phone!&lt;/p&gt;

&lt;p&gt;But what if you could represent an entire native app as JSON and &lt;strong&gt;load it on demand from the cloud over HTTP&lt;/strong&gt;, just like a web page?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jasonette.com/images/j.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;This little idea consumed the entirety of my life in 2016.&lt;/p&gt;

&lt;p&gt;And the result is &lt;a href=&quot;https://www.jasonette.com&quot;&gt;Jasonette&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Jasonette lets you &lt;strong&gt;build 100% native apps on Android and iOS simply by writing a single JSON markup.&lt;/strong&gt; Watch the video below if you haven&amp;#39;t yet. Your life will never be the same.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;style&gt;.embed-container { position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden; max-width: 100%; } .embed-container iframe, .embed-container object, .embed-container embed { position: absolute; top: 0; left: 0; width: 100%; height: 100%; }&lt;/style&gt;&lt;div class='embed-container'&gt;    &lt;iframe title=&quot;YouTube video player&quot; width=&quot;640&quot; height=&quot;390&quot; src=&quot;//www.youtube.com/embed/hfevBAAfCMQ&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;When I look back at 2016, it really feels like ages because so many things happened.&lt;/p&gt;

&lt;p&gt;But it&amp;#39;s crazy to think that it&amp;#39;s only been 2 months since I open sourced Jasonette!&lt;/p&gt;

&lt;p&gt;Let me share my 2016 with you today.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2&gt;Season 1 Pilot: Jason&lt;/h2&gt;

&lt;p&gt;Exactly 8 months ago from today, &lt;a href=&quot;https://www.producthunt.com/posts/jason&quot;&gt;I released an app called Jason&lt;/a&gt;. This was a standalone app that was a precursor to Jasonette. You would enter a JSON URL into Jason app&amp;#39;s address bar, and it would instantly turn into your own custom app.&lt;/p&gt;

&lt;p&gt;&lt;img class='center' src='https://s3-us-west-2.amazonaws.com/www.jasonclient.org/intro.gif'&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;A lot of minds were blown:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://pbs.twimg.com/media/CirgXxKXAAEoOXt.jpg:large&quot; alt=&quot;twitter&quot;&gt;&lt;/p&gt;

&lt;p&gt;But at the same time, this was one of the most esoteric apps one could build—an app within an app, &lt;a href=&quot;https://en.wikipedia.org/wiki/Matryoshka_doll&quot;&gt;a russian doll&lt;/a&gt; of sorts—as pointed out below:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/ph.png&quot; alt=&quot;ph&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;I didn&amp;#39;t even have a specific set of target users in mind when I built this. I just built it because I could.™&lt;/p&gt;

&lt;p&gt;But I looked at all these reactions and thought about it:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Other people were amazed that an app can be built this way, and wanted to build their own apps this way too.&lt;/li&gt;
&lt;li&gt;I wasn&amp;#39;t interested in just another way of building apps. I was more interested in lowering the barrier so significantly that it changes the meaning of the term &amp;quot;app&amp;quot;.&lt;/li&gt;
&lt;li&gt;Charging for usage would beat the purpose since that would fail at lowering the barrier.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I knew exactly what I had to do: Jason needed to be open sourced and completely set free.&lt;/p&gt;

&lt;p&gt;Well it shouldn&amp;#39;t be that hard to open source. After all, I already have a functional code base, right?&lt;/p&gt;

&lt;p&gt;Hahaha. &lt;/p&gt;

&lt;p&gt;It took me 6 months.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2&gt;Intermission: Lessons learned from documentation&lt;/h2&gt;

&lt;p&gt;Once I dived in, I soon realized open sourcing is not just about putting the code out there, but making sure people can understand it easily.&lt;/p&gt;

&lt;p&gt;This was especially the case for Jasonette, because without a documented API, no one would be able to know what they can do with it. It would be like releasing a web browser without an HTML spec. Basically, the documentation itself was the product.&lt;/p&gt;

&lt;p&gt;And turns out, documentation is not easy. &lt;/p&gt;

&lt;div class='jekyll-twitter-plugin'&gt;&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Open source project is 1 percent inspiration, 99 percent documentation.&lt;/p&gt;&amp;mdash; ethan (@gliechtenstein) &lt;a href=&quot;https://twitter.com/gliechtenstein/status/786284865733877764&quot;&gt;October 12, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;&lt;/div&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;For the next 6 months, I did nothing but documentation and code cleanup.&lt;/p&gt;

&lt;p&gt;These were my darkest days. I did nothing but work on the documentation, I wasn&amp;#39;t creating something new, I was simply documenting something that already existed and I hated it. But what other options did I have? So I kept at it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;However, I soon realized that&lt;/strong&gt; while frustrating, the process of documenting the project was extremely helpful:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;I got to understand my own code better.&lt;/li&gt;
&lt;li&gt;I found a lot of inconsistencies in the API while documenting, which needed to be refactored.&lt;/li&gt;
&lt;li&gt;I gained a birds-eye point of view of the project, which was crucial when I started working on the Android version later.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;But the thing is, the more I documented, the more I had to refactor, and the more I refactored, the more I had to document to reflect the update. By working more, I was creating even more work. At some point I started feeling like a &lt;a href=&quot;https://en.wikipedia.org/wiki/Zeno&amp;#x27;s_paradoxes#Achilles_and_the_tortoise&quot;&gt;tortoise chasing after achilles&lt;/a&gt;. Would I ever finish this?&lt;/p&gt;

&lt;p&gt;In the meantime, I had set up a landing page and kept adding new materials as soon as they were ready, even though I hadn&amp;#39;t launched it yet. And somehow people were discovering it and sharing it.&lt;/p&gt;

&lt;p&gt;One day when I was begrudgingly working on documenting an &lt;a href=&quot;https://github.com/Jasonette/s3-upload-example&quot;&gt;express.js demo app&lt;/a&gt; for Jasonette, I saw this tweet.&lt;/p&gt;

&lt;div class='jekyll-twitter-plugin'&gt;&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;kind of interesting, 100% declarative apps with JSON &lt;a href=&quot;https://t.co/hzjyhZKsmU&quot;&gt;https://t.co/hzjyhZKsmU&lt;/a&gt;, probably hella leaky abstraction in some cases but neat&lt;/p&gt;&amp;mdash; TJ Holowaychuk (@tjholowaychuk) &lt;a href=&quot;https://twitter.com/tjholowaychuk/status/779092360487546880&quot;&gt;September 22, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;&lt;/div&gt;

&lt;p&gt;What a nice timing! I was very excited, and this encouraging tweet gave me all the strength I needed to finish up the docs and prepare for the launch... which wouldn&amp;#39;t happen for another month and a half.&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Season 1 Episode 01. Jasonette-iOS&lt;/h2&gt;

&lt;p&gt;On the morning of 11/4 &lt;a href=&quot;https://news.ycombinator.com/item?id=12879179&quot;&gt;I posted on Hacker News&lt;/a&gt;. It shot up to #1 and stayed #1 the entire day.&lt;/p&gt;

&lt;p&gt;Then it went on to become the &lt;strong&gt;#1 Github trending project&lt;/strong&gt;. Not too bad for my first ever open source contribution!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/github_trending.png&quot; alt=&quot;github&quot;&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Season 1 Episode 02. Jasonette-Android&lt;/h2&gt;

&lt;p&gt;Upon releasing the iOS version, the most frequently asked question was &amp;quot;Android?&amp;quot;. I wasn&amp;#39;t surprised, since I knew that was the most obvious next step.&lt;/p&gt;

&lt;p&gt;However what I didn&amp;#39;t know was how long it would take me to come up with one.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Or if it would be even possible at all.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I only knew that Android had a layout system called &lt;code&gt;LinearLayout&lt;/code&gt; which works similar to &lt;code&gt;UIStackView&lt;/code&gt; which I used for the iOS version. So I just assumed that it would be possible, but it was really not straightforward.&lt;/p&gt;

&lt;p&gt;This time, I decided not to torture myself with 6 months of agony. Instead of trying to make a perfect release, I decided to pick only the most crucial features and commit to releasing version 0 as soon as possible, and go from there.&lt;/p&gt;

&lt;p&gt;I set the goal: &lt;strong&gt;Implement the core engine and get it out there, in 1 month.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;And surprisingly, I managed to succeed.&lt;/p&gt;

&lt;p&gt;Watch the android version and the ios version side by side. These are loading from exactly the same JSON you can find &lt;a href=&quot;https://github.com/Jasonette/Instagram-UI-example/blob/master/home.json&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class='col-6'&gt;&lt;img src='https://cdn-images-1.medium.com/max/1200/1*yHXxTeQFdyWjxPSP2f7ZkA.gif'&gt;&lt;/span&gt;&lt;span class='col-6'&gt;&lt;img src='https://cdn-images-1.medium.com/max/1200/1*v9RxUZ-8XzLfDTfI3gmx6A.gif'&gt;&lt;/span&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Season 1 Finale: Current state of Jasonette community&lt;/h2&gt;

&lt;p&gt;What excites me the most is that the project has managed to find a great community of people who share the same vision and all contributing to the project in many different ways.&lt;/p&gt;

&lt;h3&gt;Open source is magic&lt;/h3&gt;

&lt;p&gt;I&amp;#39;ve never worked on open source before so all these contributions from people I&amp;#39;ve never met still feel surreal to me.&lt;/p&gt;

&lt;p&gt;It&amp;#39;s really amazing how people from all around the world can come together and collaborate to build something together this easily.&lt;/p&gt;

&lt;h3&gt;New features and projects&lt;/h3&gt;

&lt;p&gt;I went back and took a look at what our community has accomplished during the two months Jasonette has been out, and looks like we did a lot.&lt;/p&gt;

&lt;p&gt;Here are some of the &lt;strong&gt;new major features and projects&lt;/strong&gt; we&amp;#39;ve added since the launch (Not including bugfixes or iOS-to-Android feature port because that would make the list huuuge):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Jasonette/JASONETTE-Android&quot;&gt; 🔥 Jasonette-Android&lt;/a&gt; - The name says it all. The Android implementation of Jasonette, which makes Jasonette fully cross platform.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Jasonette/JASONETTE-Android/issues/13&quot;&gt;Android binary size reduction&lt;/a&gt; - Initially the Android binary size was huge, at over 40MB. We&amp;#39;ve made some optimizations which dropped it down to around 9MB, all the while supporting 100% of the parsers (json, csv, rss, xml, html), thanks for the contribution &lt;a href=&quot;https://github.com/brad&quot;&gt;@brad&lt;/a&gt;!&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Jasonette/JASONETTE-iOS/issues/7&quot;&gt;Push notifications&lt;/a&gt; - Push notifications on iOS purely powered by JSON. We will soon release this officially once we document the API and implement the Android version.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Jasonette/JASONETTE-iOS/pull/42&quot;&gt;Local JSON&lt;/a&gt; - This was one of the &lt;a href=&quot;https://github.com/Jasonette/JASONETTE-iOS/issues/48&quot;&gt;most higly requested&lt;/a&gt; features. Some people wanted to embed a JSON file in their project locally instead of fetching from a remote server. I initially was hesitant but soon became convinced that it can be useful in many cases. Thanks to &lt;a href=&quot;https://github.com/copongcopong&quot;&gt;@copongcopong&lt;/a&gt; for the implementation!&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Jasonette/JASONETTE-iOS/issues/34&quot;&gt;CocoaPods based extension management&lt;/a&gt; - We had a long discussion thread about this on Github, and in the end, &lt;a href=&quot;https://github.com/seletz&quot;&gt;@seletz&lt;/a&gt; implemented a solution which worked beautifully. We are currently working on the second iteration of extension management based on the insights we gained from this.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Jasonette/JASONETTE-iOS/pull/92&quot;&gt;Ad integration&lt;/a&gt; - This was also one of the &lt;a href=&quot;https://github.com/Jasonette/JASONETTE-iOS/issues/79&quot;&gt;most highly requested&lt;/a&gt; features as well. Thanks to &lt;a href=&quot;https://github.com/wajahatch888&quot;&gt;@wajahatch888&lt;/a&gt;, now we have AdMob support on iOS. &lt;a href=&quot;https://github.com/Jasonette/JASONETTE-Android/issues/22&quot;&gt;Android support&lt;/a&gt; to come soon :)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Jasonette/JASONETTE-iOS/commit/b359ab6d44f88d54ca9a5240f0e62e4ec0ca6852&quot;&gt;Deep linking&lt;/a&gt; - Ability to open Jasonette apps using URL scheme (Example: &lt;code&gt;jasonette://href?url=https://www.jasonbase.com/things/dh3.json&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Jasonette/JASONETTE-iOS/pull/20&quot;&gt;Log action&lt;/a&gt; - An action that lets you log anything during execution. Built by &lt;a href=&quot;https://github.com/seletz&quot;&gt;@seletz&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Jasonette/JASONETTE-iOS/pull/27&quot;&gt;$background event&lt;/a&gt; - An event to detect when the app goes into background mode. Thanks &lt;a href=&quot;https://github.com/fretn&quot;&gt;@fretz&lt;/a&gt;!&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Jasonette/JASONETTE-iOS/pull/30&quot;&gt;components border&lt;/a&gt; - Add &amp;quot;border&amp;quot; attribute to component styles. Now, any component can have a border surrounding them, thanks to &lt;a href=&quot;https://github.com/WenchaoD&quot;&gt;@WenchaoD&lt;/a&gt;!&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Jasonette/JASONETTE-iOS/pull/87&quot;&gt;Loading indicator&lt;/a&gt; - Another great feature addition by &lt;a href=&quot;https://github.com/wajahatch888&quot;&gt;@wajahatch888&lt;/a&gt;. Displays a loading indicator when the content is loading.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Jasonette/JASONETTE-Android/issues/30&quot;&gt;HTML component for Android&lt;/a&gt; - I had actually left out this feature on Android initially because I wasn&amp;#39;t sure how performant it would be to have WebViews as components. &lt;a href=&quot;https://github.com/brad&quot;&gt;@brad&lt;/a&gt; went on and just built it himself, and turns out that it works super smooth! Now works cross-platform both on iOS and Android.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Jasonette/JASONETTE-iOS/pull/94&quot;&gt;Image button&lt;/a&gt; - Initially the buttons could only display text. Now it&amp;#39;s possible to use image buttons. Both on iOS and Android.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Other Important Contributions&lt;/h3&gt;

&lt;p&gt;New features are exciting, but I think what&amp;#39;s really important are things that we do to make the project itself much more maintainable and comprehensible so it&amp;#39;s easier to work with. This includes:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Documentation&lt;/li&gt;
&lt;li&gt;Adding automation to reduce repetitive tasks&lt;/li&gt;
&lt;li&gt;Making it easier to work with Jasonette itself&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;It&amp;#39;s still very early days for Jasonette so we lack a lot of these things. And the community is coming up with various solutions. &lt;strong&gt;I especially welcome these contributions with open arms&lt;/strong&gt;. Here are some of the highlights we&amp;#39;ve achieved:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Jasonette/documentation/commit/eb5734484d07b49ec81a70c5eb8c017eaa342412&quot;&gt;Auto-generate documentation using Travis CI&lt;/a&gt; - As an open source newbie I had no idea you could just automatically generate a documentation, so have been manually doing it. Now it&amp;#39;s all automated via &lt;a href=&quot;https://travis-ci.org/&quot;&gt;Travis CI&lt;/a&gt;, thanks to &lt;a href=&quot;https://github.com/gtramontina&quot;&gt;@gtramontina&lt;/a&gt;!&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Jasonette/JASONETTE-iOS/commit/0962d3bd2a7ccec7c091cb42a643055be7a03c6a&quot;&gt;Integration with Code Climate&lt;/a&gt; - I am learning about all kinds of great tools for maintaining and visualizing open source projects from contributions. &lt;a href=&quot;https://codeclimate.com&quot;&gt;Code Climate&lt;/a&gt; is really nifty and lets you see problems with the code at a glance. Thanks to &lt;a href=&quot;https://github.com/lukeramsden&quot;&gt;@lukeramsden&lt;/a&gt; for the integration!&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Jasonette/JASONETTE-iOS/commit/81cf25c9b26fad1e066027e28daa9f13cdaabe3a&quot;&gt;Make it easy to use multiple targets in XCode&lt;/a&gt; - I honestly had never thought about this idea. &lt;a href=&quot;https://github.com/golopupinsky&quot;&gt;@golopupinsky&lt;/a&gt; found that it becomes tedious to use one Jasonette project to build multiple apps, and just came up with a solution, and I think it will be super useful for people who want to juggle between building multiple apps using a single Jasonette project file.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2&gt;What next in 2017? - Season 2 Preview&lt;/h2&gt;

&lt;p&gt;2016 was just the beginning. Our community is working on a lot of exciting things, and we plan to release tons of mind-blowing things in 2017. Here are some examples:&lt;/p&gt;

&lt;h3&gt;Oauth&lt;/h3&gt;

&lt;p&gt;This will be amazing once we roll out officially. It will be one of the most powerful features of Jasonette. Stay tuned :)&lt;/p&gt;

&lt;h3&gt;Package Manager&lt;/h3&gt;

&lt;p&gt;Jasonette was &lt;a href=&quot;http://docs.jasonette.com/advanced/#extension&quot;&gt;designed to be extensible&lt;/a&gt;. However, while writing an extension for personal usage has been easy, it has always been difficult to share and distribute because of all the dependency management we had to deal with.&lt;/p&gt;

&lt;p&gt;After having tried multiple approaches to managing extensions, we&amp;#39;ve finally found the best way to make writing extensions dead simple. We are still working on it and plan to release it soon.&lt;/p&gt;

&lt;p&gt;Expect to see a lot of cool additional features powered by JSON in 2017. &lt;/p&gt;

&lt;h3&gt;Lambda&lt;/h3&gt;

&lt;p&gt;I&amp;#39;ll leave this up to your imagination :)&lt;/p&gt;

&lt;p&gt;All I have to say is that this will take jasonette to the next level.&lt;/p&gt;

&lt;h3&gt;Much more&lt;/h3&gt;

&lt;p&gt;Of course, there are a lot of other cool projects which are still work in progress but I won&amp;#39;t mention them here just to keep the mystery 😁 &lt;/p&gt;

&lt;p&gt;Follow our project to stay updated!&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Join us.&lt;/h2&gt;

&lt;p&gt;Sound exciting? join us on &lt;a href=&quot;https://jasonette.now.sh/&quot;&gt;slack&lt;/a&gt;, &lt;a href=&quot;https://forum.jasonette.com/&quot;&gt;forum&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/jasonclient&quot;&gt;twitter&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;Also, follow and contribute to the project on Github: &lt;a href=&quot;https://github.com/Jasonette/JASONETTE-Android&quot;&gt;Jasonette-Android&lt;/a&gt;, &lt;a href=&quot;https://github.com/Jasonette/JASONETTE-iOS&quot;&gt;Jasonette-iOS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;And most importantly, &lt;a href=&quot;https://www.jasonette.com&quot;&gt;Go build awesome things with it!&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/join.png&quot; alt=&quot;Join us&quot;&gt;&lt;/p&gt;
</content>
 </entry>
 

</feed>
